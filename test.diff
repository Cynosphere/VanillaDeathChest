diff --git a/build.gradle b/build.gradle
index 22e769e..9f90f87 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,4 +1,4 @@
-version = "1.16.1-1.11.0.4-fabric"
+version = "1.16.1-1.11.0.5-fabric"
 group = "com.therandomlabs.vanilladeathchest"

 apply from: "https://raw.githubusercontent.com/TheRandomLabs/Common-Gradle/master/fabric/1.16.gradle"
diff --git a/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinBlock.java b/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinBlock.java
index 5f2985b..d5e3983 100644
--- a/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinBlock.java
+++ b/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinBlock.java
@@ -48,7 +48,7 @@ public class MixinBlock {
 			cancellable = true
 	)
 	private static void dropStack(
-			World world, BlockPos pos, ItemStack stack, CallbackInfo callbackInfo
+			World world, BlockPos pos, ItemStack stack, CallbackInfo callback
 	) {
 		List<ItemStack> drops = GetBlockDropCallback.EVENT.invoker().getDrop(world, pos, stack);

@@ -69,6 +69,7 @@ public class MixinBlock {
 				world.spawnEntity(item);
 			}
 		}
-		callbackInfo.cancel();
+
+		callback.cancel();
 	}
 }
diff --git a/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinPlayerEntity.java b/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinPlayerEntity.java
index f0caa30..23dc838 100644
--- a/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinPlayerEntity.java
+++ b/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinPlayerEntity.java
@@ -23,23 +23,49 @@

 package com.therandomlabs.vanilladeathchest.mixin;

-import com.therandomlabs.vanilladeathchest.api.DropsList;
+import java.util.ArrayList;
+import java.util.List;
+
+import com.therandomlabs.vanilladeathchest.api.event.player.PlayerDropAllItemsCallback;
+import net.minecraft.entity.Entity;
 import net.minecraft.entity.ItemEntity;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.entity.player.PlayerInventory;
+import net.minecraft.server.world.ServerWorld;
 import org.spongepowered.asm.mixin.Final;
 import org.spongepowered.asm.mixin.Mixin;
 import org.spongepowered.asm.mixin.Shadow;
 import org.spongepowered.asm.mixin.injection.At;
+import org.spongepowered.asm.mixin.injection.Inject;
 import org.spongepowered.asm.mixin.injection.Redirect;
+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

 @SuppressWarnings("NullAway")
-@Mixin(PlayerEntity.class)
+@Mixin(value = PlayerEntity.class, priority = Integer.MAX_VALUE)
 public class MixinPlayerEntity {
 	@Shadow
 	@Final
 	public PlayerInventory inventory;

+	private final ArrayList<ItemEntity> drops = new ArrayList<>();
+
+	@Inject(method = "dropInventory", at = @At("HEAD"))
+	public void dropInventoryHead(CallbackInfo callback) {
+		drops.clear();
+	}
+
+	@SuppressWarnings("unchecked")
+	@Inject(method = "dropInventory", at = @At("TAIL"))
+	public void dropInventoryTail(CallbackInfo callback) {
+		final PlayerEntity player = (PlayerEntity) (Object) this;
+
+		if (!PlayerDropAllItemsCallback.EVENT.invoker().onPlayerDropAllItems(
+				(ServerWorld) player.getEntityWorld(), player, (List<ItemEntity>) drops.clone()
+		)) {
+			drops.forEach(Entity::remove);
+		}
+	}
+
 	//We don't directly redirect PlayerEntity#dropItem because other mods do this and cause
 	//conflicts.
 	@Redirect(
@@ -51,6 +77,6 @@ public class MixinPlayerEntity {
 	)
 	public void setPickupDelay(ItemEntity entity, int pickupDelay) {
 		entity.setPickupDelay(pickupDelay);
-		((DropsList) inventory).addDrop(entity);
+		drops.add(entity);
 	}
 }
diff --git a/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinPlayerInventory.java b/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinPlayerInventory.java
deleted file mode 100644
index f1ea009..0000000
--- a/src/main/java/com/therandomlabs/vanilladeathchest/mixin/MixinPlayerInventory.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * The MIT License (MIT)
- *
- * Copyright (c) 2018-2019 TheRandomLabs
- *
- * Permission is hereby granted, free of charge, to any person obtaining a copy of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
- * the Software, and to permit persons to whom the Software is furnished to do so,
- * subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in all
- * copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.therandomlabs.vanilladeathchest.mixin;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import com.therandomlabs.vanilladeathchest.api.DropsList;
-import com.therandomlabs.vanilladeathchest.api.event.player.PlayerDropAllItemsCallback;
-import net.minecraft.entity.Entity;
-import net.minecraft.entity.ItemEntity;
-import net.minecraft.entity.player.PlayerEntity;
-import net.minecraft.entity.player.PlayerInventory;
-import net.minecraft.server.world.ServerWorld;
-import org.spongepowered.asm.mixin.Final;
-import org.spongepowered.asm.mixin.Mixin;
-import org.spongepowered.asm.mixin.Shadow;
-import org.spongepowered.asm.mixin.injection.At;
-import org.spongepowered.asm.mixin.injection.Inject;
-import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
-
-@SuppressWarnings("NullAway")
-@Mixin(value = PlayerInventory.class, priority = Integer.MAX_VALUE)
-public class MixinPlayerInventory implements DropsList {
-	@Shadow
-	@Final
-	public PlayerEntity player;
-
-	private final ArrayList<ItemEntity> drops = new ArrayList<>();
-
-	@Override
-	public void addDrop(ItemEntity entity) {
-		drops.add(entity);
-	}
-
-	@Inject(method = "dropAll", at = @At("HEAD"))
-	public void dropAllHead(CallbackInfo callback) {
-		drops.clear();
-	}
-
-	@SuppressWarnings("unchecked")
-	@Inject(method = "dropAll", at = @At("TAIL"))
-	public void dropAllTail(CallbackInfo callback) {
-		if (!PlayerDropAllItemsCallback.EVENT.invoker().onPlayerDropAllItems(
-				(ServerWorld) player.getEntityWorld(), player, (List<ItemEntity>) drops.clone()
-		)) {
-			drops.forEach(Entity::remove);
-		}
-	}
-}
diff --git a/src/main/resources/vanilladeathchest.mixins.json b/src/main/resources/vanilladeathchest.mixins.json
index 4da7a0f..9032216 100644
--- a/src/main/resources/vanilladeathchest.mixins.json
+++ b/src/main/resources/vanilladeathchest.mixins.json
@@ -7,7 +7,6 @@
 		"MixinExplosion",
 		"MixinLivingEntity",
 		"MixinPlayerEntity",
-		"MixinPlayerInventory",
 		"MixinServerPlayerInteractionManager",
 		"MixinShulkerBoxBlock"
 	],
